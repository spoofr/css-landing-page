@import url('https://fonts.googleapis.com/css?family=Rubik:400,700,900&display=swap');

/* Base */
html {
    background-color: #5f45bb;
    background-image: linear-gradient(to bottom right, #180cac, #d054e4);
    color: #fff;
    font-family: "Rubik", sans-serif;
    font-size: 16px;
    text-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    line-height: 1.5;
    min-height: 100vh;
    min-width: 300px;
    overflow-x: hidden;
}
a {
    /* Using currentColor is prefered because it will pick up the color set by html */
    color: currentColor;
    cursor: pointer;
    text-decoration: none;
}

/* Shared */
.wallpaper {
    display: block;
    height: 100%;
    left: 0;
    top: 0;
    width: 100%;
}
.wallpaper,
.picture-shadow,
.picture-image {
    display: block;
    height: 100%;
    left: 0;
    top: 0;
    width: 100%;
}
.job,
.button {
    font-family: "Rubik", sans-serif;
    letter-spacing: 0.3em;
    text-transform: uppercase;
}
.button,
.social a {
    transform-origin: center;
    transition-duration: 100ms;
}
.social {
    display: flex;
    margin-top: 1.5rem;
}
.social li {
    height: 2rem;
    margin-right: 0.5rem;
    text-align: center;
    width: 2rem;
}

/* Specific */
/* We're using each background-* property instead of the shorthand background one.
If you use background: red , you are essentially setting background-color: red and reseting all other
properties to their initial value.
It becomes a problem when you actually override a declaration you had previously written, and you wonder
why your CSS line doesn't work!
If background-color had been set earlier, it would have been undone here.
The only useful shorthand properties are margin , padding and border .*/
.wallpaper {
    background-image: url("../images/austria.jpg");
    background-position: center;
    background-size: cover;
    opacity: 0.2;
    position: fixed;
}
.content {
    /* The position: relative allows .content to appear above .wallpaper , and the min-height is
    here to make sure .content covers the whole page. */
    display: flex; /* Enabling Flexbox and it makes both of it's childs into flexbox items as well. */
    position: relative;
    min-height: 100vh;
}
.side {
    max-height: 20rem;
    max-width: 20rem;
}
.about {
    max-width: 26rem;
}
.picture {
    padding-top: 100%;
    position: relative;
    width: 100%;
}
.picture-shadow {
    border-radius: 290486px;
    background-image: radial-gradient(#000 0%, rgba(0, 0, 0, 0) 70%);
    position: absolute;
    top: 10%;
}
.picture-image {
    border-radius: 290486px;
    position: absolute;
}
.name {
    font-weight: 900;
    font-size: 3rem;
    line-height: 1.125;
    margin-bottom: 0.5rem;
}
.job {
    color: #ffe479;
    font-size: 0.75rem;
}
.hr {
    background-color: #ff470f;
    border: none;
    content: "";
    height: 1px;
    margin-bottom: 1.5rem;
    margin-top: 1.5rem;
    transform-origin: center left;
    width: 4rem;
}
.description {
    font-size: 1.3rem;
}  
.contact {
    display: inline-block;
    margin-top: 1.5rem;
    vertical-align: top;
}
.button {
    background-color: #fff;
    border-radius: 290486px;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    color: #9013fe;
    display: inline-block;
    font-size: 0.875rem;
    font-weight: 900;
    line-height: 1;
    padding: 1.25em 2em;
    text-shadow: none;
    transition-property: box-shadow, transform;
    user-select: none;
    vertical-align: top;
    white-space: nowrap;
    will-change: box-shadow, transform;
}
.button:hover {
    box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2);
    transform: scale(1.02) translateY(-4px);
}
.button:active {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);
    transform: scale(0.98) translateY(-2px);
}
.social a:hover {
    opacity: 1;
    transform: scale(1.25);
}
.social a:active {
    opacity: 1;
    transform: scale(1.1);
}

/* Responsiveness */
@media screen and (max-width: 799px) {
  .content {
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 5rem 3rem;
    }
    .side {
        margin-bottom: 3rem;
        width: 100%;
    }
}

@media screen and (min-width: 800px) {
.content {
    align-items: center;
    justify-content: space-around;
    justify-content: space-evenly;
    padding: 4rem;
}
.side {
    flex-grow: 0;
    flex-shrink: 0;
    height: 20rem;
    margin-left: 4rem;
    order: 2;
    width: 20rem;
}
.about {
    flex-grow: 1;
    flex-shrink: 1;
  }
}
.social a {
    align-items: center;
    display: flex;
    font-size: 1.5rem;
    height: 2rem;
    justify-content: center;
    opacity: 0.5;
    transition-property: opacity, transform;
    width: 2rem;
    will-change: opacity, transform;
}